use std::fs;
use std::collections::VecDeque;

fn part1() {
    let content = fs::read_to_string("input.txt").expect("Expected to read file");
    let lines = content.lines();
    let mut piles: [VecDeque<char>; 9] = [
        VecDeque::new(),
        VecDeque::new(),
        VecDeque::new(),
        VecDeque::new(),
        VecDeque::new(),
        VecDeque::new(),
        VecDeque::new(),
        VecDeque::new(),
        VecDeque::new(),
    ];

    for line in lines {
        let mut should_move = true;
        for i in line.chars().enumerate().filter(|(_, c)| *c == '[').map(|(i, _)| i) {
            let pile = i / 4;
            let container = line.chars().nth(i + 1).unwrap();

            piles[pile].push_front(container);
            should_move = false;
        }

        if !should_move {
            continue;
        }

        return;
    }
}

fn part2() {
    let content = fs::read_to_string("input.txt").expect("Expected to read file");
}

fn main() {
    part1();
    part2();
}
